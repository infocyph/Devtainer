#!/usr/bin/env bash
set -euo pipefail

# ────────────────────────────────────────────────────────────────
# 1) Parse -V <version> flag
# ────────────────────────────────────────────────────────────────
TARGET=""
if [[ "${1:-}" == "-V" ]]; then
  if [[ -n "${2:-}" ]]; then
    TARGET="PHP_${2}"
    shift 2
  else
    echo "Error: -V requires a version (e.g. -V 8.3)" >&2
    exit 1
  fi
fi

# ────────────────────────────────────────────────────────────────
# 2) Auto-detect highest version if none specified
# ────────────────────────────────────────────────────────────────
if [[ -z "$TARGET" ]]; then
  for v in 8.4 8.3 8.2 8.1 8.0 7.4 7.3; do
    if docker ps --format '{{.Names}}' | grep -qx "PHP_$v"; then
      TARGET="PHP_$v"
      break
    fi
  done
fi

if [[ -z "$TARGET" ]]; then
  echo "Error: no PHP container (PHP_8.4 … PHP_7.3) is running." >&2
  exit 1
fi

# ────────────────────────────────────────────────────────────────
# 3) Look up the container’s image
# ────────────────────────────────────────────────────────────────
IMAGE=$(docker inspect -f '{{.Config.Image}}' "$TARGET")

# ────────────────────────────────────────────────────────────────
# 4) Build docker run flags
# ────────────────────────────────────────────────────────────────
RUN_FLAGS=(--rm -v "$PWD":/workspace -w /workspace)
[[ -t 0 ]] && RUN_FLAGS+=(-it) || RUN_FLAGS+=(-i)

# ────────────────────────────────────────────────────────────────
# 5) Exec php with whatever remains
# ────────────────────────────────────────────────────────────────
docker run "${RUN_FLAGS[@]}" "$IMAGE" php "$@"
