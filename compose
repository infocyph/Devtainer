#!/bin/bash

# Global Variables
env_file=".env"  # Path to your .env file
var_name="COMPOSE_PROFILES"
valid_profiles=("apache" "nginx" "php" "mysql" "redis" "certbot" "tools")
existing_profiles=""

# Function to load existing profiles from .env
load_existing_profiles() {
    if grep -q "^${var_name}=" "$env_file"; then
        existing_profiles=$(grep "^${var_name}=" "$env_file" | cut -d '=' -f 2 | tr ',' '\n')
    fi
}

# Function to check if a profile exists in the valid profiles array
profile_exists() {
    local profile="$1"
    for valid_profile in "${valid_profiles[@]}"; do
        if [[ "$valid_profile" == "$profile" ]]; then
            return 0
        fi
    done
    return 1
}

# Function to check if a profile is in existing profiles
profile_in_existing() {
    local profile="$1"
    echo "$existing_profiles" | grep -qx "$profile"
}

# Function to update or add COMPOSE_PROFILES in the .env file
modify_compose_profiles() {
    local selected_profiles=()
    local profile_status=()
    local default_choice=""
    local choice
    local selected

    # Mark existing profiles in the list and pre-populate the default choice
    for i in "${!valid_profiles[@]}"; do
        if echo "$existing_profiles" | grep -qx "${valid_profiles[$i]}"; then
            profile_status[$i]="[x]"
            default_choice+="$((i + 1)),"  # Pre-select profiles in the list
        else
            profile_status[$i]="[ ]"
        fi
    done

    # Remove trailing comma from default_choice
    default_choice="${default_choice%,}"

    # Display available profiles with numbers and mark existing ones
    echo "Select the profiles (comma-separated numbers or range, e.g., 1,2,5-7):"
    for i in "${!valid_profiles[@]}"; do
        echo "$((i + 1)). ${profile_status[$i]} ${valid_profiles[$i]}"
    done

    # Prompt for user input with the existing choices pre-filled
    read -e -p "Enter your choice: " -i "$default_choice" choice

    # Expand any ranges like 1-3 into individual numbers
    IFS=',' read -ra selected <<< "$choice"
    for item in "${selected[@]}"; do
        if [[ "$item" == *"-"* ]]; then
            local start end
            start=$(echo "$item" | cut -d'-' -f1)
            end=$(echo "$item" | cut -d'-' -f2)
            for ((i = start; i <= end; i++)); do
                selected_profiles+=("${valid_profiles[i - 1]}")
            done
        else
            selected_profiles+=("${valid_profiles[item - 1]}")
        fi
    done

    # Join selected profiles into a CSV string
    local selected_profiles_str
    selected_profiles_str=$(IFS=,; echo "${selected_profiles[*]}")

    # Modify or add COMPOSE_PROFILES in the .env file
    if grep -q "^${var_name}=" "$env_file"; then
        sed -i "s|^${var_name}=.*|${var_name}=${selected_profiles_str}|" "$env_file"
        echo "COMPOSE_PROFILES has been updated in $env_file."
    else
        echo "${var_name}=${selected_profiles_str}" >>"$env_file"
        echo "COMPOSE_PROFILES has been added to $env_file."
    fi
}

# Function to update or add profiles to COMPOSE_PROFILES based on passed parameters
modify_compose_profiles_param() {
    local new_profiles=("$@")  # Accepts an array of profiles to add
    local updated_profiles=()

    # Loop through the new profiles and add them if valid and not already present
    for profile in "${new_profiles[@]}"; do
        if profile_exists "$profile"; then
            if ! profile_in_existing "$profile"; then
                updated_profiles+=("$profile")
            fi
        else
            echo "Warning: '$profile' is not a valid profile."
        fi
    done

    # Combine existing and newly added profiles
    updated_profiles+=($(echo "$existing_profiles"))

    # Join updated profiles into a CSV string
    local updated_profiles_str
    updated_profiles_str=$(IFS=,; echo "${updated_profiles[*]}")

    # Modify or add COMPOSE_PROFILES in the .env file
    if grep -q "^${var_name}=" "$env_file"; then
        sed -i "s|^${var_name}=.*|${var_name}=${updated_profiles_str}|" "$env_file"
        echo "COMPOSE_PROFILES has been updated in $env_file."
    else
        echo "${var_name}=${updated_profiles_str}" >>"$env_file"
        echo "COMPOSE_PROFILES has been added to $env_file."
    fi
}

# Example usage
load_existing_profiles
modify_compose_profiles

# Example usage for modifying based on passed parameters
modify_compose_profiles_param "nginx" "redis" "certbot"
