x-default-service: &default-service
  restart: unless-stopped
  networks:
    - datastore
  healthcheck:
    test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}" ]
    interval: 30s
    timeout: 10s
    retries: 5

services:
  postgres-server:
    <<: *default-service
    container_name: POSTGRESQL
    hostname: postgres
    image: postgres:${POSTGRES_VERSION:-alpine}
    profiles:
      - postgresql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - TZ=${TZ:-}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DATABASE:-postgres}
    volumes:
      - ../../data/postgresql:/var/lib/postgresql/data

  # PostgreSQL Primary (Master) Server
  postgres-master:
    <<: *default-service
    container_name: POSTGRES_MASTER
    hostname: postgres-master
    image: postgres:${POSTGRES_VERSION:-alpine}
    profiles:
      - postgresql-replication
    ports:
      - "${POSTGRES_MASTER_PORT:-5433}:5432"
    environment:
      - TZ=${TZ:-}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DATABASE:-postgres}
    volumes:
      - ../../data/postgresql-master:/var/lib/postgresql/data
      - ../conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - ../conf/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf" ]

  # PostgreSQL Replica (Slave) Server
  postgres-replica:
    <<: *default-service
    container_name: POSTGRES_REPLICA
    hostname: postgres-replica
    image: postgres:${POSTGRES_VERSION:-alpine}
    profiles:
      - postgresql-replication
    depends_on:
      - postgres-master
    environment:
      - TZ=${TZ:-}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DATABASE:-postgres}
      - PGPASSWORD=${POSTGRES_PASSWORD:-postgres}
      - REPLICATE_FROM=postgres-master
    volumes:
      - ../../data/postgresql-replica:/var/lib/postgresql/data
      - ../conf/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    command: [
      "sh", "-c",
      "if [ -z \"$(ls -A /var/lib/postgresql/data)\" ]; then \
         pg_basebackup -h postgres-master -D /var/lib/postgresql/data \
                       -U ${POSTGRES_USER:-postgres} -v -P -R --wal-method=stream; \
       fi; \
       exec docker-entrypoint.sh postgres"
    ]

  # Unified pgAdmin Client (connect to any server you add via the UI)
  postgres-client:
    <<: *default-service
    container_name: PG_ADMIN
    hostname: postgres-client
    image: dpage/pgadmin4:latest
    profiles:
      - postgresql-client
    ports:
      - "${PGADMIN_PORT:-5400}:80"
    environment:
      - TZ=${TZ:-}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@email.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ../../data/pgadmin:/var/lib/pgadmin
      - ../../logs/pgadmin:/var/log/pgadmin
    networks:
      - frontend
      - datastore
