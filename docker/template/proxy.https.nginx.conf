server {
    listen 443 ssl http2;
    server_name {{SERVER_NAME}} www.{{SERVER_NAME}};

    # SSL Certificates for Nginx (mTLS)
    ssl_certificate /etc/mkcert/{{SERVER_NAME}}/server.pem;
    ssl_certificate_key /etc/mkcert/{{SERVER_NAME}}/server-key.pem;

    # SSL Client Verification (Mutual TLS)
    ssl_client_certificate /etc/mkcert/{{SERVER_NAME}}/client.pem;
    ssl_verify_client on;  # Require client authentication

    # Secure SSL/TLS protocols and ciphers (with compatibility)
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:DES-CBC3-SHA";
    ssl_prefer_server_ciphers on;

    # Session management for performance
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP Stapling (Improves SSL handshake speed)
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # HSTS (Force HTTPS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Client body size limit (Adjustable)
    client_max_body_size {{CLIENT_MAX_BODY_SIZE}};

    # Logging
    access_log /var/log/nginx/{{SERVER_NAME}}.access.log;
    error_log /var/log/nginx/{{SERVER_NAME}}.error.log;

    # Enable Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_static on;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/x-javascript application/xml+rss application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    # Reverse Proxy (Forward Everything to Apache-PHP)
    location / {
        proxy_pass https://{{PHP_CONTAINER}}:443;
        include /etc/nginx/proxy_params;
        proxy_ssl_certificate /etc/mkcert/{{SERVER_NAME}}/server.pem;
        proxy_ssl_certificate_key /etc/mkcert/{{SERVER_NAME}}/server-key.pem;
        proxy_ssl_verify on;
        proxy_ssl_trusted_certificate /etc/mkcert/{{SERVER_NAME}}/client.pem;
        proxy_ssl_verify_depth 2;
        proxy_redirect off;
    }
}
